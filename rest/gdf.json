{
  "Exports": {
    "DeleteHandler": "type DeleteHandler interface {Delete(net/http.ResponseWriter,*net/http.Request); ItemPath() string}",
    "GetHandler": "type GetHandler interface {Get(net/http.ResponseWriter,*net/http.Request); ItemPath() string}",
    "IndexHandler": "type IndexHandler interface {Index(net/http.ResponseWriter,*net/http.Request); ListPath() string}",
    "PatchHandler": "type PatchHandler interface {ItemPath() string; Patch(net/http.ResponseWriter,*net/http.Request)}",
    "PostHandler": "type PostHandler interface {ListPath() string; Post(net/http.ResponseWriter,*net/http.Request)}",
    "Register": "func (*github.com/go-on/router.Router,interface{}) map[github.com/go-on/method.Method]*github.com/go-on/router.Route",
    "init": ""
  },
  "Imports": {
    "github.com/go-on/method.DELETE": "const Method 1 \u003c\u003c iota",
    "github.com/go-on/method.GET": "const Method 1 \u003c\u003c iota",
    "github.com/go-on/method.Method": "type Method int",
    "github.com/go-on/method.Method.EmptyBody": "(Method) EmptyBody() bool",
    "github.com/go-on/method.Method.IsIdempotent": "(Method) IsIdempotent() bool",
    "github.com/go-on/method.Method.IsResponseCacheable": "(Method) IsResponseCacheable() bool",
    "github.com/go-on/method.Method.IsSafe": "(Method) IsSafe() bool",
    "github.com/go-on/method.Method.String": "(Method) String() string",
    "github.com/go-on/method.PATCH": "const Method 1 \u003c\u003c iota",
    "github.com/go-on/method.POST": "const Method 1 \u003c\u003c iota",
    "github.com/go-on/method.init": "",
    "github.com/go-on/router.*Route.HasParams": "(*Route) HasParams() bool",
    "github.com/go-on/router.*Route.MustURL": "(*Route) MustURL(...string) string",
    "github.com/go-on/router.*Route.MustURLMap": "(*Route) MustURLMap(map[string]string) string",
    "github.com/go-on/router.*Route.MustURLStruct": "(*Route) MustURLStruct(interface{},string) string",
    "github.com/go-on/router.*Route.Route": "(*Route) Route() string",
    "github.com/go-on/router.*Route.Router": "(*Route) Router() *Router",
    "github.com/go-on/router.*Route.ServeHTTP": "(*Route) ServeHTTP(net/http.ResponseWriter,*net/http.Request)",
    "github.com/go-on/router.*Route.URL": "(*Route) URL(...string)(string,error)",
    "github.com/go-on/router.*Route.URLMap": "(*Route) URLMap(map[string]string)(string,error)",
    "github.com/go-on/router.*Route.URLStruct": "(*Route) URLStruct(interface{},string)(string,error)",
    "github.com/go-on/router.*Router.AddWrappers": "(*Router) AddWrappers(...wrap.Wrapper)",
    "github.com/go-on/router.*Router.AllGETPaths": "(*Router) AllGETPaths(RouteParameter) []string",
    "github.com/go-on/router.*Router.DELETE": "(*Router) DELETE(string,net/http.Handler) *Route",
    "github.com/go-on/router.*Router.DynamicRoutes": "(*Router) DynamicRoutes() []*Route",
    "github.com/go-on/router.*Router.EachGETRoute": "(*Router) EachGETRoute((string,*Route))",
    "github.com/go-on/router.*Router.EachRoute": "(*Router) EachRoute((string,*Route))",
    "github.com/go-on/router.*Router.GET": "(*Router) GET(string,net/http.Handler) *Route",
    "github.com/go-on/router.*Router.GETPathsByStruct": "(*Router) GETPathsByStruct(map[*Route]map[string][]interface{}) []string",
    "github.com/go-on/router.*Router.HEAD": "(*Router) HEAD(string,net/http.Handler) *Route",
    "github.com/go-on/router.*Router.Handle": "(*Router) Handle(string,github.com/go-on/method.Method,net/http.Handler)(*Route,error)",
    "github.com/go-on/router.*Router.Menu": "(*Router) Menu(MenuAdder,MenuParameter)",
    "github.com/go-on/router.*Router.Mount": "(*Router) Mount(string,*net/http.ServeMux) error",
    "github.com/go-on/router.*Router.MountPoint": "(*Router) MountPoint() string",
    "github.com/go-on/router.*Router.MustHandle": "(*Router) MustHandle(string,github.com/go-on/method.Method,net/http.Handler) *Route",
    "github.com/go-on/router.*Router.MustMount": "(*Router) MustMount(string,*net/http.ServeMux)",
    "github.com/go-on/router.*Router.MustSavePages": "(*Router) MustSavePages(RouteParameter,net/http.Handler,string)",
    "github.com/go-on/router.*Router.OPTIONS": "(*Router) OPTIONS(string,net/http.Handler) *Route",
    "github.com/go-on/router.*Router.PATCH": "(*Router) PATCH(string,net/http.Handler) *Route",
    "github.com/go-on/router.*Router.POST": "(*Router) POST(string,net/http.Handler) *Route",
    "github.com/go-on/router.*Router.PUT": "(*Router) PUT(string,net/http.Handler) *Route",
    "github.com/go-on/router.*Router.Parent": "(*Router) Parent() *Router",
    "github.com/go-on/router.*Router.Path": "(*Router) Path() string",
    "github.com/go-on/router.*Router.Route": "(*Router) Route(string) *Route",
    "github.com/go-on/router.*Router.SavePages": "(*Router) SavePages(RouteParameter,net/http.Handler,string) map[string]error",
    "github.com/go-on/router.*Router.ServeHTTP": "(*Router) ServeHTTP(net/http.ResponseWriter,*net/http.Request)",
    "github.com/go-on/router.*Router.StaticRoutePaths": "(*Router) StaticRoutePaths() []string",
    "github.com/go-on/router.*Router.TRACE": "(*Router) TRACE(string,net/http.Handler) *Route",
    "github.com/go-on/router.Route": "type Route struct{}",
    "github.com/go-on/router.Router": "type Router struct {FallbackHandler net/http.Handler}",
    "github.com/go-on/router.init": ""
  },
  "Path": "github.com/go-on/router/rest"
}
